{"version":3,"sources":["components/BasicLauout.module.less","components/ArticleCard.module.less","serviceWorker.js","components/ArticleCard.js","components/About.js","components/Inbox.js","components/charpater_1/Product.js","components/charpater_1/index.js","components/charpater_1/ProductList.js","components/charpater_2/index.js","components/Log/Log_1.js","components/Log/Log_2.js","components/Log/Log_3.js","components/Log/Log_4.js","components/Log/Log_5.js","components/Log/Log_6.js","components/Log/Log_7.js","components/Log/Log_8.js","components/Log/Log_9.js","components/Log/Log_10.js","components/Log/Log_11.js","nav.js","components/Header.js","components/MiniHeader.js","components/BasicLayout.js","router.js","index.js"],"names":["module","exports","basic-layout-wrap","sider-menu-link","header-title","mini-header-title","article-container","article-title","article-meta","meta-date","meta-icon","article-content","article-tag","Boolean","window","location","hostname","match","tagColors","ArticleCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this$props","_this$props$url","url","_this$props$title","title","_this$props$date","date","_this$props$authors","authors","_this$props$content","content","_this$props$tags","tags","react_default","a","createElement","row","className","styles","col","xs","sm","md","lg","xl","href","rel","icon","type","concat","map","v","i","tag","key","color","PureComponent","About","Inbox","Product","src","alt","React","Component","ProductList","charpater_1_Product","App","divider","Log_1","renderCode_1","react_markdown_default","source","style","marginBottom","Log_3","Log_4","renderCode_2","Log_5","name","handleBtnClick","setState","es_button","size","ghost","onClick","Log_6","default_highlight","language","docco","renderCode_3","renderCode_4","renderCode_5","renderCode_6","renderCode_7","renderCode_8","Log_8","atomOneDark","esm_prism","prism","showLineNumbers","renderCode_9","renderText_1","renderInfo_1","Log_9","renderTitle","renderText_2","Log_10","renderText_3","renderText_4","renderInfo_2","renderText_5","renderText_6","renderText_7","renderText_8","Log_11","renderText_9","renderText_10","renderText_11","renderText_12","Nav","react_router","path","exact","component","Charpater_1","Charpater_2","Log_2","Log_7","Header","_ref","Content","Sider","SubMenu","menu","BasicLayout","onBreakpointChange","isBreakpoint","onCollapse","collapsed","console","log","layout","width","background","breakpoint","collapsedWidth","onBreakpoint","mode","defaultSelectedKeys","defaultOpenKeys","height","Item","react_router_dom","to","padding","minHeight","components_Header","MiniHeader","nav","RouterConfig","locale_provider","locale","zhCN","components_BasicLayout","ReactDOM","render","router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6872061.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"basic-layout-wrap\":\"src-components-BasicLauout-module__basic-layout-wrap--1RI9w\",\"sider-menu-link\":\"src-components-BasicLauout-module__sider-menu-link--1Nffl\",\"header-title\":\"src-components-BasicLauout-module__header-title--2GGnY\",\"mini-header-title\":\"src-components-BasicLauout-module__mini-header-title--fa8UQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article-container\":\"src-components-ArticleCard-module__article-container--1GhEE\",\"article-title\":\"src-components-ArticleCard-module__article-title--8-afd\",\"article-meta\":\"src-components-ArticleCard-module__article-meta--3P_Tz\",\"meta-date\":\"src-components-ArticleCard-module__meta-date--ytVEm\",\"meta-icon\":\"src-components-ArticleCard-module__meta-icon--1kzG1\",\"article-content\":\"src-components-ArticleCard-module__article-content--Ly4c3\",\"article-tag\":\"src-components-ArticleCard-module__article-tag--3jUK0\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Row, Col, Icon, Tag } from 'antd';\n\nimport styles from './ArticleCard.module.less';\n\nconst tagColors = ['magenta', 'green', 'volcano', 'cyan', 'red', 'orange', 'gold', 'lime'];\n\nclass ArticleCard extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    const { \n      url = 'https://tech.meituan.com/2019/03/14/litho-use-and-principle-analysis.html',\n      title = '基本功 | Litho的使用及原理剖析',\n      date = '2019年03月14日',\n      authors = `少宽 张颖`,\n      content = 'Litho是Facebook推出的一套高效构建Android UI的声明式框架，主要目的是提升RecyclerView复杂列表的滑动性能和降低内存占用。',\n      tags = ['前端', 'Javascrip', 'React', 'SpaceBox'],\n    } = this.props;\n    return (\n      <Row className={styles['article-container']}>\n        <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n          <h2 className={styles['article-title']}>\n            <a href={url} rel=\"bookmark\">{title}</a>\n          </h2>\n          <div className={styles['article-meta']}>\n            <span className={styles['meta-date']}>\n              <Icon type=\"calendar\" className={styles['meta-icon']} />{date}\n            </span>\n            <span>{authors}</span>\n          </div>\n          <div className={`${styles['article-content']}`}>\n            {content}\n            <a href={url}>阅读全文</a>\n          </div>\n          <div className={styles['article-tag']}>\n            {tags.map((v, i) => <Tag key={`_${i}`} color={tagColors[i]}>{v}</Tag>)}\n          </div>\n        </Col>\n        <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n          <h2 className={styles['article-title']}>\n            <a href={url} rel=\"bookmark\">{title}</a>\n          </h2>\n          <div className={styles['article-meta']}>\n            <span className={styles['meta-date']}>\n              <Icon type=\"calendar\" className={styles['meta-icon']} />{date}\n            </span>\n            <span>{authors}</span>\n          </div>\n          <div className={`${styles['article-content']}`}>\n            {content}\n            <a href={url}>阅读全文</a>\n          </div>\n          <div className={styles['article-tag']}>\n            {tags.map((v, i) => <Tag key={`_${i}`} color={tagColors[i]}>{v}</Tag>)}\n          </div>\n        </Col>\n        <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n          <h2 className={styles['article-title']}>\n            <a href={url} rel=\"bookmark\">{title}</a>\n          </h2>\n          <div className={styles['article-meta']}>\n            <span className={styles['meta-date']}>\n              <Icon type=\"calendar\" className={styles['meta-icon']} />{date}\n            </span>\n            <span>{authors}</span>\n          </div>\n          <div className={`${styles['article-content']}`}>\n            {content}\n            <a href={url}>阅读全文</a>\n          </div>\n          <div className={styles['article-tag']}>\n            {tags.map((v, i) => <Tag key={`_${i}`} color={tagColors[i]}>{v}</Tag>)}\n          </div>\n        </Col>\n        <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n          <h2 className={styles['article-title']}>\n            <a href={url} rel=\"bookmark\">{title}</a>\n          </h2>\n          <div className={styles['article-meta']}>\n            <span className={styles['meta-date']}>\n              <Icon type=\"calendar\" className={styles['meta-icon']} />{date}\n            </span>\n            <span>{authors}</span>\n          </div>\n          <div className={`${styles['article-content']}`}>\n            {content}\n            <a href={url}>阅读全文</a>\n          </div>\n          <div className={styles['article-tag']}>\n            {tags.map((v, i) => <Tag key={`_${i}`} color={tagColors[i]}>{v}</Tag>)}\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default ArticleCard;","import React, { PureComponent } from 'react';\n\nclass About extends PureComponent {\n  render() {\n    return (\n      <div>this is About component!</div>\n    );\n  }\n}\n\nexport default About;","import React, { PureComponent } from 'react';\n\nclass Inbox extends PureComponent {\n  render() {\n    return (\n      <div>this is Inbox component!</div>\n    );\n  }\n}\n\nexport default Inbox;","import React from 'react';\n\nclass Product extends React.Component {\n  render() {\n    return (\n      <div className='item'>\n        <div className='image'>\n          <img src='https://avatars2.githubusercontent.com/u/17396286?s=40&v=4' alt=\"头像\"/>\n        </div>\n        <div className='content'>\n          <div className='description'>\n            <span>Fort Knight</span>\n            <p>Authentic renaissance actors, delivered in just two weeks.</p>\n          </div>\n          <div className='extra'>\n            <span>Submitted by:</span>\n            <img\n              className='ui avatar image'\n              alt='头像'\n              src='https://avatars2.githubusercontent.com/u/17396286?s=40&v=4'\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Product;\n","import ProductList from './ProductList';\nexport default ProductList;","import React from 'react';\nimport Product from './Product';\n\nclass ProductList extends React.Component {\n  render() {\n    return (\n      <div className=\"product-wrap\">\n        <Product />\n      </div>\n    );\n  }\n}\n\nexport default ProductList;","// import ProductList from './ProductList';\n// export default ProductList;\nimport React from 'react';\nimport { Divider } from 'antd';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <p>\n        child:\n        {\n          `\n          1.child <a onClick={this.handleUpVote}></a>\n          2.handleUpVote() {this.props.onVote(this.props.id) }\n          `\n        }\n        </p>\n        <Divider />\n        <p>\n        parent:\n        {\n          `\n          1.onVote={this.handleProductUpVote}\n          2.handleProductUpVote(productId) {\n            console.log(productId + ' was upvoted.');\n          }\n          `\n        }\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React, { PureComponent } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Prism from 'prismjs';\n\nclass Log_1 extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  renderCode_1 = () => {\n    const markdown = `\n      class ProductList extends React.Component {\n        constructor(props) {\n          super(props);\n          this.state = {\n            products: [],\n          }; \n        }\n        componentDidMount() {\n          this.setState({ products: Seed.products });\n        }\n      }  \n    `;\n    return markdown;\n  }\n\n  render() {\n    const input = '# This is a header\\n\\nAnd this is a paragraph';\n\n    return (\n      <div>\n        <ReactMarkdown source='# 1.componentDidUpdate' />\n        <div style={{ marginBottom: 20 }}>\n          <ReactMarkdown source={this.renderCode_1()} className=\"lang-js\" />\n        </div>\n        <div>\n          <ReactMarkdown source={input} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Log_1;","import React, { PureComponent } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Prism from 'prismjs';\n\nclass Log_1 extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  renderCode_1 = () => {\n    const markdown = `\n      class ProductList extends React.Component {\n        constructor(props) {\n          super(props);\n          this.state = {\n            products: [],\n          }; \n        }\n        componentDidMount() {\n          this.setState({ products: Seed.products });\n        }\n      }  \n    `;\n    return markdown;\n  }\n\n  render() {\n\n    return (\n      <div>\n        <ReactMarkdown source='# 1.Refactoring with the Babel plugin' />\n        <div style={{ marginBottom: 20 }}>\n          <ReactMarkdown source={this.renderCode_1()} className=\"lang-js\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Log_1;","import React, { PureComponent } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Prism from 'prismjs';\n\nclass Log_3 extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  renderCode_1 = () => {\n    const markdown = `\n      begin\n      Page 58.\n      Binding custom component methods\n      ----------\n      end\n      Page 63.\n      Binding custom component methods\n    `;\n    return markdown;\n  }\n\n  render() {\n\n    return (\n      <div>\n        <ReactMarkdown source='# 1.Refactoring with the Babel plugin' />\n        <div style={{ marginBottom: 20 }}>\n          <ReactMarkdown source={this.renderCode_1()} className=\"lang-html\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Log_3;\n","import React, { PureComponent } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Prism from 'prismjs';\n\nclass Log_4 extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  renderCode_1 = () => {\n    const markdown = `\n      begin\n      Page 63.\n      Binding custom component methods\n      ----------\n      end\n      Page 72.\n      Binding custom component methods\n    `;\n    return markdown;\n  }\n\n  renderCode_2 = () => {\n    const code = `\n      handleProductUpVote(productId) {\n        const nextProducts = this.state.products.map((product) => {\n          if (product.id === productId) {\n            return Object.assign({}, product, {\n              votes: product.votes + 1,\n            });\n          } else {\n              return product;\n            }\n        });\n        this.setState({\n          products: nextProducts,\n        });\n      }\n    `;\n    return code;\n  }\n\n  render() {\n\n    return (\n      <div>\n        <ReactMarkdown source='# 1.Setting state with this.setState()' />\n        <div style={{ marginBottom: 20 }}>\n          <ReactMarkdown source={this.renderCode_1()} className=\"lang-js\" />\n        </div>\n        <ReactMarkdown source='# 2.Updating state and immutability' />\n        <div style={{ marginBottom: 20 }}>\n          <ReactMarkdown source={this.renderCode_2()} className=\"lang-js\" />\n        </div>\n        <ReactMarkdown source='# 3.Refactoring with the Babel plugin' />\n        <ReactMarkdown source='## 3.1 Babel plugins and presets(babel-standalone)' />\n        <ReactMarkdown source='# 4.Property initializers()ES7' />\n        {/* <div style={{ marginBottom: 20 }}>\n          <ReactMarkdown source={this.renderCode_2()} className=\"lang-js\" />\n        </div> */}\n      </div>\n    )\n  }\n}\n\nexport default Log_4;\n","import React, { PureComponent } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Button } from 'antd';\nimport Prism from 'prismjs';\n\nclass Log_5 extends PureComponent {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n\n  //   }\n  // }\n  state = {\n    name: 'zoro'\n  };\n\n  handleBtnClick = () => {\n    this.setState({ name: 'i am zoro'});\n  }\n\n  renderCode_1 = () => {\n    const markdown = `\n      begin\n      Page 72.\n      ----------\n      end\n      Page 76.\n    `;\n    return markdown;\n  }\n\n  renderCode_2 = () => {\n    const code = `\n      class Product extends React.Component { \n        constructor(props) {\n          super(props);\n          this.handleUpVote = this.handleUpVote.bind(this);\n        }\n        handleUpVote() { \n          this.props.onVote(this.props.id);\n        }\n      }\n    `;\n    return code;\n  }\n\n  render() {\n\n    return (\n      <div>\n        <ReactMarkdown source='# 1.Reading....' />\n        <div style={{ marginBottom: 20 }}>\n          <ReactMarkdown source={this.renderCode_1()} className=\"lang-js\" />\n        </div>\n        <ReactMarkdown source='# 2.Refactoring Product' />\n        <div style={{ marginBottom: 20 }}>\n          <ReactMarkdown source={this.renderCode_2()} className=\"lang-js\" />\n        </div>\n        <div style={{ marginBottom: 20 }}>\n          <Button type=\"primary\" size=\"small\" ghost onClick={this.handleBtnClick}>chane text</Button>\n          <span>text: {this.state.name}</span>\n        </div>\n        \n        {/* <ReactMarkdown source='# 3.Refactoring with the Babel plugin' />\n        <ReactMarkdown source='## 3.1 Babel plugins and presets(babel-standalone)' />\n        <ReactMarkdown source='# 4.Property initializers()ES7' /> */}\n      </div>\n    )\n  }\n}\n\nexport default Log_5;\n","import React, { PureComponent } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nimport { Button } from 'antd';\n\nclass Log_6 extends PureComponent {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n\n  //   }\n  // }\n  state = {\n    name: 'zoro'\n  };\n\n  handleBtnClick = () => {\n    this.setState({ name: 'i am zoro'});\n  }\n\n  renderCode_1 = () => {\n    const markdown = `\n      begin\n      Page 76.\n      ----------\n      end\n      Page 76.\n    `;\n    return markdown;\n  }\n\n  renderCode_2 = () => {\n    const code = `\n      class Product extends React.Component { \n        constructor(props) {\n          super(props);\n          this.handleUpVote = this.handleUpVote.bind(this);\n        }\n        handleUpVote() { \n          this.props.onVote(this.props.id);\n        }\n      }\n    `;\n    return code;\n  }\n\n  render() {\n    const Component = () => {\n      const codeString = `\n      class Product extends React.Component { \n        constructor(props) {\n          super(props);\n          this.handleUpVote = this.handleUpVote.bind(this);\n        }\n        handleUpVote() { \n          this.props.onVote(this.props.id);\n        }\n      }\n    `;\n      return <SyntaxHighlighter language='javascript' style={docco}>{codeString}</SyntaxHighlighter>;  \n    }\n\n    return (\n      <div>\n        <ReactMarkdown source='# 1.Reading....' />\n        <div style={{ marginBottom: 20 }}>\n          <ReactMarkdown source={this.renderCode_1()} className=\"lang-js\" />\n        </div>\n        <ReactMarkdown source='# 2.Refactoring Product' />\n        <div style={{ marginBottom: 20 }}>\n          <ReactMarkdown source={this.renderCode_2()} className=\"lang-js\" />\n        </div>\n        <div style={{ marginBottom: 20 }}>\n          <Button type=\"primary\" size=\"small\" ghost onClick={this.handleBtnClick}>chane text</Button>\n          <span>text: {this.state.name}</span>\n        </div>\n        {Component()}\n        {/* {Component1()} */}\n        {/* <ReactMarkdown source='# 3.Refactoring with the Babel plugin' />\n        <ReactMarkdown source='## 3.1 Babel plugins and presets(babel-standalone)' />\n        <ReactMarkdown source='# 4.Property initializers()ES7' /> */}\n      </div>\n    )\n  }\n}\n\nexport default Log_6;\n","import React, { PureComponent } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Button } from 'antd';\nimport Prism from 'prismjs';\n\nclass Log_6 extends PureComponent {\n  state = {\n    name: 'zoro'\n  };\n\n  handleBtnClick = () => {\n    this.setState({ name: 'i am zoro'});\n  }\n\n  renderCode_1 = () => {\n    const markdown = `\n      begin\n      Page 88.\n      ----------\n      end\n      Page 91.\n    `;\n    return markdown;\n  }\n\n  renderCode_2 = () => {\n    const code = `\n    Finally, we’ll modify the top-level component to have it communicate with the server.\n    最后，我们将修改顶层组件，使其与服务器通信。\n    In fact, this follows from a handy framework for developing a React app from scratch\n    事实上，这是从零开始开发React应用程序的一个方便框架:\n      1. Break the app into components\n      将应用程序拆分成组件\n      2.Build a static version of the app\n      构建一个静态版本的应用程序\n      3. Determine what should be stateful\n      确定什么是有状态的\n      4.Determine in which component each piece of state should live\n      确定state应该位于哪个组件中\n      5. Hard-code initial states\n      初始化state\n      6. Add inverse data flow components\n      添加反向数据流组件\n      7. Add server communication\n      添加服务器通信\n    `;\n    return code;\n  }\n  renderCode_3 = () => {\n    const code = `\n    We followed this pattern in the last project:\n    在上一个项目中，我们遵循了这个模式:\n    1. Break the app into components\n    将应用程序拆分成组件\n      We looked at the desired UI and determined we wanted ProductList and Product components.\n      我们根据所需的UI确定ProductList和Product组件。\n    2. Build a static version of the app\n    构建一个静态版本的应用程序\n      Our components started off without using state. Instead, we had ProductList pass down static props to Product.\n      我们的组件在没有使用state。取而代之是让ProductList以静态的props的方式传递给Product。\n    3. Determine what should be stateful\n    确定什么是有状态的\n      In order for our application to become interactive, we had to be able to modify the vote property on each product.\n      Each product had to be mutable and therefore stateful.\n      为了使我们的应用程序具有交互性，我们必须能够修改每个product的投票属性。每个Product组件都必须是可变的，因此它是有状态的。\n    4. Determine in which component each piece of state should live\n    确定state应该位于哪个组件中\n      ProductList managed the voting state using React component class methods.\n      ProductList使用React组件类方法管理投票状态。\n    5. Hard-code initial state\n    初始化state\n      When we re-wrote ProductList to use this.state, we seeded it from Seed.products.\n      当我们用this.state重新编写ProductList时。我们从Seed.product初始化数据\n    6. Add inverse data flow\n    添加反向数据流组件\n      We defined the handleUpVote function in ProductList and passed it down in props so that each \n      Product could inform ProductList of up-vote events.\n      我们在ProductList中定义了handleUpVote函数，并在props中传递它，这样每个产品都可以将upvote事件通知ProductList。\n    7. Add server communication\n    添加服务器通信\n      We did not add a server component to our last app, but we will be doing so in this one.\n      我们没有在上一个应用程序中添加服务器组件，但是我们将在这个应用程序中添加服务器组件。\n      If steps in this process aren’t completely clear right now, don’t worry.\n      如果这个过程中的步骤现在还不完全清楚，不要担心。\n      The purpose of this chapter is to familiarize yourself with this procedure.\n      本章的目的是使你熟悉这个程序。\n      We’ve already covered step (1) and have a good understanding of all of our components, \n      save for some uncertainty down at the Timer component. \n      我们已经讨论了步骤(1)，并且对所有组件都有很好的理解，除了Timer component上的一些不确定性。\n      Step (2) is to build a static version of the app. As in the last project, \n      this amounts to defining React components, their hierarchy, and their HTML representation. \n      步骤(2)是构建一个静态版本应用程序。与上一个项目一样，这相当于定义React组件、层次结构和HTML表现形式。\n      We completely avoid state for now.\n      我们现在完全避免了state。\n    `;\n    return code;\n  }\n\n  renderCode_4 = () => {\n    return (\n      `\n      Let’s start off with the TimersDashboard component. \n      让我们从TimersDashboard组件开始\n      Again, all of our React code for this chapter will be inside of the file public/app.js.\n      同样，本章的所有React代码都在public/app.js文件中。\n      We’ll begin by defining a familiar function, render():\n      我们将首先定义一个熟悉的函数render():\n      `\n    );\n  }\n\n  renderCode_5 = () => {\n    return `\n    class TimersDashboard extends React.Component { \n      render() {\n        return (\n          <div className='ui three column centered grid'>\n            <div className='column'>\n              <EditableTimerList />\n              <ToggleableTimerForm isOpen={true} />\n            </div>\n          </div>\n        ); \n      }\n    }\n\n    This component renders its two child components nested under div tags.\n      该组件由嵌套在div下的两个子组件EditableTimerList和ToggleableTimerForm构成\n    TimersDashboard passes down one prop to ToggleableTimerForm: isOpen.\n      TimersDashboard组件传递给ToggleableTimerForm组件一个props属性isOpen。\n    This is used by the child component to determine whether to render a “+” or TimerForm.\n    When ToggleableTimerForm is “open” the form is being displayed.\n      用于决定子组件是否呈现“+”还是TimerForm组件。\n    When ToggleableTimerForm is “open” the form is being displayed.\n      当属性isOpen={true}时将显示ToggleableTimerForm组件\n    `;\n  }\n\n  renderCode_6 = () => {\n    return `\n    As in the last chapter, don’t worry about the className attribute on the div tags. \n    This will ultimately define the class on HTML div elements and is purely for styling purposes.\n      与上一章一样，不要担心div标记上的className属性。这最终将在HTML div元素上定义类，纯粹用于样式化目的。\n    In this example, classes like ui three column centered grid all come from the CSS framework Semantic UI. \n    The framework is included in the head of index.html.\n      在这个例子中，像ui three column centered grid 这样的类都来自CSS框架Semantic UI。该框架包含在index.html的头部。\n    `;\n  }\n\n  renderCode_7 = () => {\n    return `\n    We will define EditableTimerList next. We’ll have it render two EditableTimer components. \n    One will end up rendering a timer’s face. The other will render a timer’s edit form:\n      接下来我们将定义EditableTimerList。我们将渲染两个EditableTimer组件。一个将呈现一个定时器的面板。另一个将呈现一个定时器的编辑表单:\n    `;\n  }\n\n  renderCode_8 = () => {\n    return `\n    class EditableTimerList extends React.Component { \n      render() {\n        return (\n          <div id='timers'>\n            <EditableTimer \n              title='Learn React' \n              project='Web Domination' \n              elapsed='8986300' \n              runningSince={null} \n              editFormOpen={false} \n            />\n            <EditableTimer\n              title='Learn extreme ironing' project='World Domination' \n              elapsed='3890985' \n              runningSince={null} \n              editFormOpen={true}\n            />\n          </div>  \n        );\n      }\n    }\n    `;\n  }\n\n  render() {\n\n    return (\n      <div>\n        <ReactMarkdown source='# 1.Reading....' />\n        <div style={{ marginBottom: 20 }}>\n          <ReactMarkdown source={this.renderCode_1()} className=\"lang-js\" />\n        </div>\n\n        <ReactMarkdown source='# page 89' />\n        <div style={{ marginBottom: 20 }}>\n          <ReactMarkdown source={this.renderCode_2()} className=\"lang-js\" />\n        </div>\n\n        <ReactMarkdown source='# page 90' />\n        <div style={{ marginBottom: 20 }}>\n          <ReactMarkdown source={this.renderCode_3()}  className=\"lang-js\"/>\n        </div>\n        <ReactMarkdown source='# Step 2: Build a static version of the app（步骤2:构建一个静态的版本的应用程序）' />\n        <ReactMarkdown source='### TimersDashboard ' />\n        <ReactMarkdown source={this.renderCode_4()} className=\"lang-js\"/>\n\n        <ReactMarkdown source='# page 91' />\n        <ReactMarkdown source='### time_tracking_app/public/js/app-1.js ' />\n        <ReactMarkdown source={this.renderCode_5()} className=\"lang-js\"/>\n        <ReactMarkdown source='### *info ' />\n        <ReactMarkdown source={this.renderCode_6()} className=\"lang-js\"/>\n        <ReactMarkdown source={this.renderCode_7()} className=\"lang-js\"/>\n        <ReactMarkdown source='### time_tracking_app/public/js/app-1.js ' />\n        <ReactMarkdown source={this.renderCode_8()} className=\"lang-js\"/>\n      </div>\n    )\n  }\n}\n\nexport default Log_6;\n","import React, { PureComponent } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { Prism } from 'react-syntax-highlighter';\nimport { atomOneDark, docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nclass Log_8 extends PureComponent {\n  renderCode_1 = () => {\n    const markdown = ` begin Page 92 => end Page 94`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{markdown}</SyntaxHighlighter>;\n  }\n\n  renderCode_2 = () => {\n    const code = `class EditableTimerList extends React.Component { \n  render() {\n    return (\n      <div id='timers'>\n        <EditableTimer \n          title='Learn React' \n          project='Web Domination' \n          elapsed='8986300' \n          runningSince={null}\n          editFormOpen={false} \n        />\n        <EditableTimer\n          title='Learn extreme ironing' \n          project='World Domination' \n          elapsed='3890985' \n          runningSince={null} \n          editFormOpen={true}\n        />\n      </div>\n    );\n  }\n}`;\n    return <Prism language='javascript' style={prism} showLineNumbers>{code}</Prism>;\n  }\n\n  renderCode_3 = () => {\n    const code = `We’re passing five props to each child component. \n  我们给每个子组件定义了了5个props属性\nThe key difference between the two Editable-Timer components is the value being set for editFormOpen.\n  两个Editable-Timer组件唯一不同的就是editFormOpen设置props属性值的不同\nWe’ll use this boolean to instruct EditableTimer which sub-component to render.\n  我们通过这个布尔值来指示渲染哪个子组件`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{code}</SyntaxHighlighter>;\n  }\n\n  renderCode_4 = () => {\n    const code =`The purpose of the prop runningSince will be covered later on in the app’s development.\n  props的目的将在以后的应用程序开发中讨论。`;\n    return <SyntaxHighlighter language='htmlbars' style={docco} >{code}</SyntaxHighlighter>;\n  }\n\n  renderCode_5 = () => {\n    const code =`EditableTimer returns either a TimerForm or a Timer based on the prop editFormOpen:\n    EditableTimer返回一个TimerForm或一个基于editFormOpen的TimerForm组件:`;\n      return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{code}</SyntaxHighlighter>;\n  }\n\n  renderCode_6 = () => {\n    const code = `class EditableTimer extends React.Component { \n  render() {\n    if (this.props.editFormOpen) { \n      return (\n        <TimerForm title={this.props.title} project={this.props.project} />\n      );\n    } else {\n      return ( \n        <Timer\n          title={this.props.title} \n          project={this.props.project}\n          elapsed={this.props.elapsed}\n          runningSince={this.props.runningSince} \n        />\n      );\n    }\n  }\n}`;\n    return <Prism language='javascript' style={prism} showLineNumbers>{code}</Prism>;\n  }\n\n  renderCode_7 = () => {\n    const code = `Note that title and project are passed down as props to TimerForm. \n  注意，title和project属性作为props传递给TimerForm。\nThis will enable the component to fill in these fields with the timer’s current values.\n  这将使组件能够通过props的值填充当前字段。`\n  return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{code}</SyntaxHighlighter>;\n  }\n\n  renderCode_8 = () => {\n    const code = `We’ll build an HTML form that will have two input fields. \n  我们将构建一个包含两个输入字段的HTML表单\nThe first input field is for the title and the second is for the project. \n  第一个是标题，第二个项目名称\nIt also has a pair of buttons at the bottom.\n  同时在底部还有一对按钮`\n  return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{code}</SyntaxHighlighter>;\n  }\n\n  renderCode_9 = () => {\n    const code = `class TimerForm extends React.Component {   \n  render() {\n    const submitText = this.props.title ? 'Update' : 'Create'; \n    return (\n      <div className='ui centered card'>\n        <div className='content'>\n          <div className='ui form'>\n            <div className='field'>\n              <label>Title</label>\n              <input type='text' defaultValue={this.props.title} /> \n            </div>\n            <div className='field'>\n              <label>Project</label>\n              <input type='text' defaultValue={this.props.project} />\n            </div>\n            <div className='ui two bottom attached buttons'>\n              <button className='ui basic blue button'>\n                {submitText}\n              </button>\n              <button className='ui basic red button'>\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );  \n  }\n}`;\n    return <Prism language='javascript' style={prism} showLineNumbers>{code}</Prism>;\n  }\n\n  renderText_1 = () => {\n    const text = `Look at the input tags. \n  通过input标签可以发现\nWe’re specifying that they have type of text and then we are using the React property defaultValue. \n  我们指定了input的本文类型（type=\"text\"），并使用了React的defaultValue属性\nWhen the form is used for editing as it is here, this sets the fields to the current values of the timer as desired.\n  当表单被编辑时，则将timer组件的值设置为当前值。`\n  return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderInfo_1 = () => {\n    const info =`Later, we’ll use TimerForm again within ToggleableTimerForm for creating timers. \n    稍后，我们将在ToggleableTimerForm中再次使用TimerForm来创建计时器。\nToggleableTimerForm will not pass TimerForm any props. \n  ToggleableTimerForm将不会给TimerForm组件传递任何props属性\nthis.props.title and this.props.project will therefore return undefined and the fields will be left empty.\n  因此this.props.title和this.props.project返回undefined,input的值也将会是空的\n`;\n    return <SyntaxHighlighter language='htmlbars' style={docco} >{info}</SyntaxHighlighter>;\n  }\n\n\n  render() {\n    return (\n      <div>\n        <ReactMarkdown source='# Reading....' />\n        { this.renderCode_1() }\n        <ReactMarkdown source='# page 92' />\n        { this.renderCode_2() }\n        { this.renderCode_3() }\n        <ReactMarkdown source='### *info' />\n        { this.renderCode_4() }\n        <ReactMarkdown source='## EditableTimer' />\n        { this.renderCode_5() }\n        { this.renderCode_6() }\n        { this.renderCode_7() }\n        <ReactMarkdown source='## TimerForm'/>\n        { this.renderCode_8() }\n        { this.renderCode_9() }\n        { this.renderText_1() }\n        <ReactMarkdown source='### *info' />\n        { this.renderInfo_1() }\n      </div>\n    )\n  }\n}\n\nexport default Log_8;\n","import React, { PureComponent } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { Prism } from 'react-syntax-highlighter';\nimport { atomOneDark, docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nclass Log_9 extends PureComponent {\n  renderTitle = () => {\n    const markdown = ` begin Page 94 => end Page 95`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{markdown}</SyntaxHighlighter>;\n  }\n\n  renderText_1 = () => {\n    const text = `At the beginning of render(), before the return statement, we define a variable submitText. \n  在return和render之间我们定义了一个submitText的变量。\nThis variable uses the presence of this.props.title to determine \nwhat text the submit button at the bottom of the form should display.\n  这个变量通过this.props.title是否存在来决定底部的按钮应该显示具体的文本\nIf title is present, we know we’re editing an existing timer, so it displays “Update.” Otherwise, it displays “Create.”\n  如果this.props.title存在，我们知道正在编辑一个现有计时器，因此它显示“Update”。否则，它将显示“Create”。\nWith all of this logic in place, TimerForm is prepared to render a form for creating a new timer or editing an existing one.\n  通过此逻辑，TimerForm准备渲染用于创建新计时器或编辑现有计时器的表单。`\n  return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderText_2 = () => {\n    const text = `Let’s turn our attention next to ToggleableTimerForm. \n    让我们把注意力转向ToggleableTimerForm组件。\nRecall that this is a wrapper component around TimerForm. It will display either a “+” or a TimerForm. \n   回想一下，这是一个围绕TimerForm的包装器组件。它将显示一个“+”或一个TimerForm。\nRight now, it accepts a single prop, isOpen, from its parent that instructs its behavior:\n   现在，它从它的父类那里接受一个props属性，isOpen，来渲染它的行为:`\n  \n  return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderCode_1 = () => {\n    const code = `class ToggleableTimerForm extends React.Component { \n  render() {\n    if (this.props.isOpen) { \n      return (\n        <TimerForm />\n      );\n    } else { \n      return (\n        <div className='ui basic content center aligned segment'>\n          <button className='ui basic button icon'>\n            <i className='plus icon' />\n          </button>\n        </div> \n      );\n    }\n  }\n}`;\n    return <Prism language='javascript' style={prism} showLineNumbers>{code}</Prism>;\n  }\n\n  renderCode_3 = () => {\n    const code = `We’re passing five props to each child component. \n  我们给每个子组件定义了了5个props属性\nThe key difference between the two Editable-Timer components is the value being set for editFormOpen.\n  两个Editable-Timer组件唯一不同的就是editFormOpen设置props属性值的不同\nWe’ll use this boolean to instruct EditableTimer which sub-component to render.\n  我们通过这个布尔值来指示渲染哪个子组件`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{code}</SyntaxHighlighter>;\n  }\n\n  renderCode_4 = () => {\n    const code =`The purpose of the prop runningSince will be covered later on in the app’s development.\n  props的目的将在以后的应用程序开发中讨论。`;\n    return <SyntaxHighlighter language='htmlbars' style={docco} >{code}</SyntaxHighlighter>;\n  }\n\n  renderCode_5 = () => {\n    const code =`EditableTimer returns either a TimerForm or a Timer based on the prop editFormOpen:\n    EditableTimer返回一个TimerForm或一个基于editFormOpen的TimerForm组件:`;\n      return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{code}</SyntaxHighlighter>;\n  }\n\n  renderCode_6 = () => {\n    const code = `class EditableTimer extends React.Component { \n  render() {\n    if (this.props.editFormOpen) { \n      return (\n        <TimerForm title={this.props.title} project={this.props.project} />\n      );\n    } else {\n      return ( \n        <Timer\n          title={this.props.title} \n          project={this.props.project}\n          elapsed={this.props.elapsed}\n          runningSince={this.props.runningSince} \n        />\n      );\n    }\n  }\n}`;\n    return <Prism language='javascript' style={prism} showLineNumbers>{code}</Prism>;\n  }\n\n  renderCode_7 = () => {\n    const code = `Note that title and project are passed down as props to TimerForm. \n  注意，title和project属性作为props传递给TimerForm。\nThis will enable the component to fill in these fields with the timer’s current values.\n  这将使组件能够通过props的值填充当前字段。`\n  return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{code}</SyntaxHighlighter>;\n  }\n\n  renderCode_8 = () => {\n    const code = `We’ll build an HTML form that will have two input fields. \n  我们将构建一个包含两个输入字段的HTML表单\nThe first input field is for the title and the second is for the project. \n  第一个是标题，第二个项目名称\nIt also has a pair of buttons at the bottom.\n  同时在底部还有一对按钮`\n  return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{code}</SyntaxHighlighter>;\n  }\n\n  renderCode_9 = () => {\n    const code = `class TimerForm extends React.Component {   \n  render() {\n    const submitText = this.props.title ? 'Update' : 'Create'; \n    return (\n      <div className='ui centered card'>\n        <div className='content'>\n          <div className='ui form'>\n            <div className='field'>\n              <label>Title</label>\n              <input type='text' defaultValue={this.props.title} /> \n            </div>\n            <div className='field'>\n              <label>Project</label>\n              <input type='text' defaultValue={this.props.project} />\n            </div>\n            <div className='ui two bottom attached buttons'>\n              <button className='ui basic blue button'>\n                {submitText}\n              </button>\n              <button className='ui basic red button'>\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );  \n  }\n}`;\n    return <Prism language='javascript' style={prism} showLineNumbers>{code}</Prism>;\n  }\n\n  \n\n  renderInfo_1 = () => {\n    const info =`Later, we’ll use TimerForm again within ToggleableTimerForm for creating timers. \n    稍后，我们将在ToggleableTimerForm中再次使用TimerForm来创建计时器。\nToggleableTimerForm will not pass TimerForm any props. \n  ToggleableTimerForm将不会给TimerForm组件传递任何props属性\nthis.props.title and this.props.project will therefore return undefined and the fields will be left empty.\n  因此this.props.title和this.props.project返回undefined,input的值也将会是空的\n`;\n    return <SyntaxHighlighter language='htmlbars' style={docco} >{info}</SyntaxHighlighter>;\n  }\n\n\n  render() {\n    return (\n      <div>\n        <ReactMarkdown source='# Reading....' />\n        { this.renderTitle() }\n        <ReactMarkdown source='# page 94' />\n        { this.renderText_1() }\n        <ReactMarkdown source='## ToggleableTimerForm' />\n        { this.renderText_2() }\n        { this.renderCode_1() }\n        {/* { this.renderCode_2() }\n        { this.renderCode_3() }\n        <ReactMarkdown source='### *info' />\n        { this.renderCode_4() }\n        \n        { this.renderCode_5() }\n        { this.renderCode_6() }\n        { this.renderCode_7() }\n        <ReactMarkdown source='## TimerForm'/>\n        { this.renderCode_8() }\n        { this.renderCode_9() }\n        { this.renderText_1() }\n        <ReactMarkdown source='### *info' />\n        { this.renderInfo_1() } */}\n      </div>\n    )\n  }\n}\n\nexport default Log_9;\n","import React, { PureComponent } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { Prism } from 'react-syntax-highlighter';\nimport { atomOneDark, docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nclass Log_10 extends PureComponent {\n  renderTitle = () => {\n    const markdown = ` begin Page 95 => end Page 95`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{markdown}</SyntaxHighlighter>;\n  }\n\n  renderText_1 = () => {\n    const text = `At the beginning of render(), before the return statement, we define a variable submitText. \n  在return和render之间我们定义了一个submitText的变量。\nThis variable uses the presence of this.props.title to determine \nwhat text the submit button at the bottom of the form should display.\n  这个变量通过this.props.title是否存在来决定底部的按钮应该显示具体的文本\nIf title is present, we know we’re editing an existing timer, so it displays “Update.” Otherwise, it displays “Create.”\n  如果this.props.title存在，我们知道正在编辑一个现有计时器，因此它显示“Update”。否则，它将显示“Create”。\nWith all of this logic in place, TimerForm is prepared to render a form for creating a new timer or editing an existing one.\n  通过此逻辑，TimerForm准备渲染用于创建新计时器或编辑现有计时器的表单。`\n  return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderText_2 = () => {\n    const text = `Let’s turn our attention next to ToggleableTimerForm. \n    让我们把注意力转向ToggleableTimerForm组件。\nRecall that this is a wrapper component around TimerForm. It will display either a “+” or a TimerForm. \n   回想一下，这是一个围绕TimerForm的包装器组件。它将显示一个“+”或一个TimerForm。\nRight now, it accepts a single prop, isOpen, from its parent that instructs its behavior:\n   现在，它从它的父类那里接受一个props属性，isOpen，来渲染它的行为:`\n  \n  return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderCode_1 = () => {\n    const code = `class ToggleableTimerForm extends React.Component { \n  render() {\n    if (this.props.isOpen) { \n      return (\n        <TimerForm />\n      );\n    } else { \n      return (\n        <div className='ui basic content center aligned segment'>\n          <button className='ui basic button icon'>\n            <i className='plus icon' />\n          </button>\n        </div> \n      );\n    }\n  }\n}`;\n    return <Prism language='javascript' style={prism} showLineNumbers>{code}</Prism>;\n  }\n\n  renderText_3 =() => {\n    const text = `As noted earlier, TimerForm does not receive any props from ToggleableTimerForm. As such, its\ntitle and project fields will be rendered empty.\nThe return statement under the else block is the markup to render a “+” button. \nYou could make a case that this should be its own React component (say PlusButton) \nbut at present we’ll keep the code inside ToggleableTimerForm.\n  如钱所叙，TimerForm没有接受任何来自父组件props属性，因此title和project属性将被渲染成空。\n  else下的语句是返回“+”button组件。你也可以认为它自己也是一个React组件（PlusButton）\n  但现在我们将在ToggleableTimerForm中保持不变。\n`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderText_4 = () => {\n    const text =`Time for the Timer component. Again, don’t worry about all the div and \nspan elements and className attributes. We’ve provided these for styling purposes:\n  开始编写Timer组件了。再一次声明不必担心所有的div、span元素和claa样式，我们提供这些是为了美化。`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  \n\n  renderInfo_1 = () => {\n    const info =`Note that we could store elapsed in seconds as opposed to milliseconds, \nbut JavaScript’s time functionality is all in milliseconds. \nWe keep elapsed consistent with this for simplicity. As a bonus, \nour timers are also slightly more accurate, even though they round to seconds when displayed to the user\n  注意，我们可以用秒而不是毫秒来存储时间，但是JavaScript的时间功能都是以毫秒为单位的。\n  为了简单起见，我们保持与此一致。另外，我们的计时器也稍微准确一些，即使当显示给用户时，计时器四舍五入为秒。`;\n\n    return <SyntaxHighlighter language='htmlbars' style={docco} >{info}</SyntaxHighlighter>;\n  }\n\n  renderInfo_2 = () => {\n    const info =`Again, we specify with ReactDOM#render() which React component we want to \nrender and where in our HTML document (index.html) to render it.\nIn this case, we’re rendering TimersDashboard at the div with the id of content.\n  同样，我们使用ReactDOM#render()指定要渲染的React组件在HTML文档(index.html)中的位置。\n  在本例中，我们使用div id=content 中渲染TimersDashboard组件。`;\n\n    return <SyntaxHighlighter language='htmlbars' style={docco} >{info}</SyntaxHighlighter>;\n  }\n\n  renderCode_2 = () => {\n    const code = `class Timer extends React.Component { \n  render() {\n    const elapsedString = helpers.renderElapsedString(this.props.elapsed); \n    return (\n      <div className='ui centered card'>\n        <div className='content'>\n          <div className='header'>{this.props.title}</div>\n          <div className='meta'> {this.props.project}</div>\n          <div className='center aligned description'>\n            <h2>{elapsedString}</h2>\n          </div>\n          <div className='extra content'>\n            <span className='right floated edit icon'>\n              <i className='edit icon' />\n            </span>\n            <span className='right floated trash icon'>\n              <i className='trash icon' />\n            </span>\n          </div>\n        </div>\n        <div className='ui bottom attached blue basic button'>\n          Start\n        </div>\n      </div>\n    );\n  }`;\n    return <Prism language='javascript' style={prism} showLineNumbers>{code}</Prism>;\n  }\n\n  renderText_5 = () => {\n    const text = `elapsed in this app is in milliseconds. \nThis is the representation of the data that React will keep. \nThis is a good representation for machines, but we want to show our carbon-based users a more readable format.\n  这个应用程序的运行时间是以毫秒为单位的。\n  这是React将保留的数据表现形式，\n  这对于机器来说是一种很好的表示，但是我们希望向用户展示一种更具可读性的格式。\nWe use a function defined in helpers.js, renderElapsedString(). \nYou can pop open that file if you’re curious about how it’s implemented. \nThe string it renders is in the format ‘HH:MM:SS’.\n  我们使用了helpers.js里的renderElapsedString()方法。\n  如果您对该方法的实现源码感兴趣，可以打开该文件。默认展示的字符串格式为' HH:MM:SS '。`;\n\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderText_6 = () => {\n    const text = `With all of the components defined, \nthe last step before we can view our static app is to ensure we call ReactDOM#render(). \nPut this at the bottom of the file:\n  定义了所有组件之后，在查看静态应用程序之前的最后一步是确保调用ReactDOM#render()。\n  把这个放在文件的底部:\n`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderText_7 = () => {\n    const text = `Save app.js and boot the server (npm start). Find it at localhost:3000:\nLet’s review all of the components represented on the page:\nInside TimersDashboard are two child components: EditableTimerList and ToggleableTimerForm.\nEditableTimerList contains two EditableTimer components. \nThe first of these has a Timer component as a child and the second a TimerForm. \nThese bottom-level components — also known as leaf components — hold the majority of the page’s HTML. \nThis is generally the case. The components above leaf components are primarily concerned with orchestration.\nToggleableTimerForm renders a TimerForm. Notice how the two forms on the page have different language for their buttons, \nas the first is updating and the second is creating.`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderText_8 = () => {\n    const text = `\n    保存app.js并运行 npm start命令，将在浏览器中以localhost:3000:呈现：让我们回顾一下当前页面的所有组件：\n    TimersDashboard包含两个组件EditableTimerList 和 ToggleableTimerForm.\n    EditableTimerList包含两个EditableTimer组件. \n    其中第一个组件是由Timer作为子组件,第二个是TimerForm组件。\n    这些底层组件(也称为叶子组件)占据了页面HTML的大部分。这是普遍情况。\n    上面的叶子组件主要与业务流程有关。\n    ToggleableTimerForm 渲染了一个 TimerForm组件.\n    请注意页面上的两个表单的按钮作用不一样，因为第一个表单在更新，第二个表单在创建。\n    `;\n    return <ReactMarkdown source={text} />\n  }\n\n  renderCode_3 = () => {\n    const code = `ReactDOM.render(\n  <TimersDashboard />,\n  document.getElementById('content')\n);`;\n    return <Prism language='javascript' style={prism} showLineNumbers>{code}</Prism>;\n  }\n\n\n  render() {\n    return (\n      <div>\n        <ReactMarkdown source='# Reading....' />\n        { this.renderTitle() }\n        <ReactMarkdown source='# page 94' />\n        { this.renderText_1() }\n        <ReactMarkdown source='## ToggleableTimerForm' />\n        { this.renderText_2() }\n        { this.renderCode_1() }\n        { this.renderText_3() }\n        <ReactMarkdown source='## Timer' />\n        { this.renderText_4() }\n        { this.renderCode_2() }\n        { this.renderText_5() }\n        <ReactMarkdown source='### info' />\n        { this.renderInfo_1() }\n        <ReactMarkdown source='## Render the app' />\n        { this.renderText_6() }\n        { this.renderCode_3() }\n        <ReactMarkdown source='### info' />\n        { this.renderInfo_2() }\n        <ReactMarkdown source='## Try it out' />\n        { this.renderText_7() }\n        { this.renderText_8() }\n      </div>\n    )\n  }\n}\n\nexport default Log_10;\n","import React, { PureComponent } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { Prism } from 'react-syntax-highlighter';\nimport { atomOneDark, docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nclass Log_11 extends PureComponent {\n  renderTitle = () => {\n    const markdown = ` begin Page 98 => end Page 98`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{markdown}</SyntaxHighlighter>;\n  }\n\n  renderText_1 = () => {\n    const text = `In order to bestow our app with interactivity, we must evolve it from its static existence to a mutable one.\nThe first step is determining what, exactly, should be mutable. Let’s start by collecting all of the data that’s employed by \neach component in our static app.  In our static app, data will be wherever we are defining or using props.We will then determine \nwhich of that data should be stateful.\n  为了让我们的应用程序更富有交互性，我们必须将它从静态的演化为可变的。首先我们得确定什么是可变的。让我们从静态应用程序中收集每个组件使用的所有数据开始。\n在我们静态程序中，数据将在我们定义或者props的位置出现。然后，我们将确定哪些数据应该是有状态的。`\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderText_2 = () => {\n    const text = `In our static app, this declares two child components. It sets one prop, which is the isOpen boolean that is \npassed down to ToggleableTimerForm.\n  在我们静态的应用程序中，它声明了两个子组件。它通过设置布尔的isOpen props属性，传递给ToggleableTimerForm组件`\n\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderCode_1 = () => {\n    const code = `class ToggleableTimerForm extends React.Component { \n  render() {\n    if (this.props.isOpen) { \n      return (\n        <TimerForm />\n      );\n    } else { \n      return (\n        <div className='ui basic content center aligned segment'>\n          <button className='ui basic button icon'>\n            <i className='plus icon' />\n          </button>\n        </div> \n      );\n    }\n  }\n}`;\n    return <Prism language='javascript' style={prism} showLineNumbers>{code}</Prism>;\n  }\n\n  renderText_3 = () => {\n    const text = `This declares two child components, each which have props corresponding to a given timer’s properties.\n  EditableTimerList声明了两个子组件，每个组件都具有与给定计时器props属性对应。`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderText_4 = () => {\n    const text = `This uses the prop editFormOpen.\n  这里使用了editFormOpen的props属性`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n\n\n  renderInfo_1 = () => {\n    const info = `Note that we could store elapsed in seconds as opposed to milliseconds, \nbut JavaScript’s time functionality is all in milliseconds. \nWe keep elapsed consistent with this for simplicity. As a bonus, \nour timers are also slightly more accurate, even though they round to seconds when displayed to the user\n  注意，我们可以用秒而不是毫秒来存储时间，但是JavaScript的时间功能都是以毫秒为单位的。\n  为了简单起见，我们保持与此一致。另外，我们的计时器也稍微准确一些，即使当显示给用户时，计时器四舍五入为秒。`;\n\n    return <SyntaxHighlighter language='htmlbars' style={docco} >{info}</SyntaxHighlighter>;\n  }\n\n  renderCode_2 = () => {\n    const code = `class Timer extends React.Component { \n  render() {\n    const elapsedString = helpers.renderElapsedString(this.props.elapsed); \n    return (\n      <div className='ui centered card'>\n        <div className='content'>\n          <div className='header'>{this.props.title}</div>\n          <div className='meta'> {this.props.project}</div>\n          <div className='center aligned description'>\n            <h2>{elapsedString}</h2>\n          </div>\n          <div className='extra content'>\n            <span className='right floated edit icon'>\n              <i className='edit icon' />\n            </span>\n            <span className='right floated trash icon'>\n              <i className='trash icon' />\n            </span>\n          </div>\n        </div>\n        <div className='ui bottom attached blue basic button'>\n          Start\n        </div>\n      </div>\n    );\n  }`;\n    return <Prism language='javascript' style={prism} showLineNumbers>{code}</Prism>;\n  }\n\n  renderText_5 = () => {\n    const text = `This uses all the props for a timer.\n  这里使用了来自timer的所有props属性`;\n\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderText_6 = () => {\n    const text = `This has two interactive input fields, one for title and one for project. When editing an existing timer, \nthese fields are initialized with the timer’s current values.\n  这里定义了两个input字段，title 和 project字段。当编辑timer组件时，这些字段的值将根据当前的值被初始化。\n`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderText_7 = () => {\n    const text = `We can apply criteria to determine if data should be stateful:\n  我们可以通过一个标准来确定数据是否应该是有状态的:。可以参照Thinking in React(https://reactjs.org/docs/thinking-in-react.html)\n1. Is it passed in from a parent via props? \n  If so, it probably isn’t state.\nA lot of the data used in our child components are already listed in their parents. This criterion helps us de-duplicate.\nFor example, “timer properties” is listed multiple times. When we see the properties declared in EditableTimerList, we can consider it state. But when we see it elsewhere, it’s not.\n2. Does it change over time? If not, it probably isn’t state.\n  This is a key criterion of stateful data: it changes.\n3. Can you compute it based on any other state or props in your component? If so, it’s not state.\n  For simplicity, we want to strive to represent state with as few data points as possible.\n  1.props属性是通过从父组件那里传递过来的吗?如果是这样，它可能不是状态。\n    我们的子组件中使用的许多数据已经在它们的父组件中列出。根据这个标准帮助我们去确定是否时state的。\n    例如，“timer属性”被多次列出。当我们看到EditableTimerList中声明的属性时，我们可以考虑它是有状态。但当我们在其他地方看到它时，它不是。\n  2.它会随时间改变吗?如果不是，它可能不是状态。\n    这是有状态数据的一个关键标准:it changes.\n  3.你可以基于组件中的任何其他状态或props计算它吗?如果是，那就不是状态。\n    为了简单起见，我们希望用尽可能少的数据点来表示状态。`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderText_8 = () => {\n    const text = `Stateful. The data is defined here. It changes over time. And it cannot be computed from other state\nor props.\n  有状态的。这里定义了数据。它会随着时间而改变。它不能从其他状态计或props属性计算出来`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderText_9 = () => {\n    const text = `In this context, not stateful. Properties are passed down from the parent.\n  在这种情况下，是没有状态的。因为属性是从父类传递下来的。`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderText_10 = () => {\n    const text = `We might be tempted to conclude that TimerForm doesn’t manage any stateful data, as title and project are \nprops passed down from the parent. However, as we’ll see, forms are special state managers in their own right.\nSo, outside of TimerForm, we’ve identified our stateful data:\n• The list of timers and properties of each timer \n• Whether or not the edit form of a timer is open \n• Whether or not the create form is open\n  我们可能会得出这样的结论:TimerForm不管理任何有状态的数据，因为title和project是从父类传递下来的。但是，我们将看到，表单本身就是特殊的状态管理器。\n因此，除TimerForm之外，我们已经确定了我们的有状态数据:\n  • 计时器列表和每个计时器的props属性 \n  • 计时器的编辑表单是否open\n  • 创建表单是否open`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderText_11 = () => {\n    const text = `While the data we’ve determined to be stateful might live in certain components in our static app, this does \nnot indicate the best position for it in our stateful app. Our next task is to determine the optimal place for each of our \nthree discrete pieces of state to live.\n\nThis can be challenging at times but, again, we can apply the following steps from Facebook’s guide “Thinking in React36” to \nhelp us with the process:\n\nFor each piece of state:\n  • Identify every component that renders something based on that state.\n  • Findacommonownercomponent(asinglecomponentaboveallthecomponents that need the state in the hierarchy).\n  • Either the common owner or another component higher up in the hierarchy\n  should own the state.\n  • If youcan’t find a component where it makes sense to ownthe state,createanew\n  component simply for holding the state and add it somewhere in the hierarchy above the common owner component.\n\n  虽然我们确定为有状态的数据可能位于静态应用程序中的某些组件中，但这并不表示它处于有状态应用程序中的最佳位置。\n  这有时是很有挑战性的，但是，同样的，我们可以应用Facebook的指南“在React Thinking”中的以下步骤来帮助我们完成这个过程:\n  对每一个state来说：\n    • 识别基于该状态呈现内容的每个组件。\n    • 找出公用的组件(一个单例组件需要的层次结构).\n    • 公共所有者或层次结构中较高的其他组件将有独自的state\n    • 如果找不到拥有状态的组件，只需创建新组件以保存状态，并将其添加到公共所有者组件上方的层次结构中的某个位置\n  `;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  renderText_12 = () => {\n    const text = `Let’s apply this method to our application:.\n  让我们把这个方法应用到我们的应用中:`;\n    return <SyntaxHighlighter language='htmlbars' style={atomOneDark} >{text}</SyntaxHighlighter>;\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <ReactMarkdown source='# Reading....' />\n          {this.renderTitle()}\n          <ReactMarkdown source='# Step 3: Determine what should be stateful' />\n          {this.renderText_1()}\n          <ReactMarkdown source='## TimersDashboard' />\n          {this.renderText_2()}\n          <ReactMarkdown source='## EditableTimerList' />\n          {this.renderText_3()}\n          <ReactMarkdown source='## EditableTimer' />\n          {this.renderText_4()}\n          <ReactMarkdown source='## Timer' />\n          {this.renderText_5()}\n          <ReactMarkdown source='## Timer' />\n          {this.renderText_6()}\n          <ReactMarkdown source='## State criteria' />\n          {this.renderText_7()}\n          <ReactMarkdown source='## Applying the criteria' />\n          <ReactMarkdown source='#### TimersDashboard（isOpen boolean for ToggleableTimerForm）' />\n          {this.renderText_8()}\n          <ReactMarkdown source='#### EditableTimerList （Timer properties）' />\n          {this.renderText_8()}\n          <ReactMarkdown source='#### EditableTimer （editFormOpen for a given timer）' />\n          {this.renderText_8()}\n          <ReactMarkdown source='#### Timer （Timer properties）' />\n          {this.renderText_9()}\n          <ReactMarkdown source='#### TimerForm （Timer properties）' />\n          {this.renderText_10()}\n        </div>\n        <div>\n          <ReactMarkdown source='# Step 4: Determine in which component each piece of state should live' />\n          {this.renderText_11()}\n          {this.renderText_12()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Log_11;\n","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport ArticleCard from './components/ArticleCard'; \nimport About from './components/About'; \nimport Inbox from './components/Inbox';\nimport Charpater_1 from './components/charpater_1';\nimport Charpater_2 from './components/charpater_2';\nimport Log_1 from './components/Log/Log_1';\nimport Log_2 from './components/Log/Log_2';\nimport Log_3 from './components/Log/Log_3';\nimport Log_4 from './components/Log/Log_4';\nimport Log_5 from './components/Log/Log_5';\nimport Log_6 from './components/Log/Log_6';\nimport Log_7 from './components/Log/Log_7';\nimport Log_8 from './components/Log/Log_8';\nimport Log_9 from './components/Log/Log_9';\nimport Log_10 from './components/Log/Log_10';\nimport Log_11 from './components/Log/Log_11';\n\nclass Nav extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/\" exact component={ArticleCard} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/inbox\" component={Inbox} />\n        <Route path=\"/charpater_1\" component={Charpater_1} />\n        <Route path=\"/charpater_2\" component={Charpater_2} />\n        <Route path=\"/log_1\" component={Log_1} />\n        <Route path=\"/log_2\" component={Log_2} />\n        <Route path=\"/log_3\" component={Log_3} />\n        <Route path=\"/log_4\" component={Log_4} />\n        <Route path=\"/log_5\" component={Log_5} />\n        <Route path=\"/log_6\" component={Log_6} />\n        <Route path=\"/log_7\" component={Log_7} />\n        <Route path=\"/log_8\" component={Log_8} />\n        <Route path=\"/log_9\" component={Log_9} />\n        <Route path=\"/log_10\" component={Log_10} />\n        <Route path=\"/log_11\" component={Log_11} />\n      </Switch>\n    )\n  }\n}\n\nexport default Nav;","import React from 'react';\nimport styles from './BasicLauout.module.less';\n\nconst Header = ({ title }) => {\n  return (\n    <h2 className={styles['header-title']}>{title}</h2>\n  )\n};\n\nexport default Header;","import React from 'react';\nimport styles from './BasicLauout.module.less';\n\nconst Header = ({ title }) => {\n  return (\n    <div className={styles['mini-header-title']}>{title}</div>\n  )\n};\n\nexport default Header;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Layout, Menu, Icon } from 'antd';\nimport Nav from '../nav';\nimport Header from './Header';\nimport MiniHeader from './MiniHeader';\n\nimport styles from './BasicLauout.module.less';\n\nconst { Content, Sider } = Layout;\nconst SubMenu = Menu.SubMenu;\n\nclass BasicLayout extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: false,\n      isBreakpoint: false\n    }\n  }\n\n  onBreakpointChange = (isBreakpoint) => {\n    this.setState({isBreakpoint});\n  }\n\n  onCollapse = (collapsed) => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  }\n\n  render() {\n    return (\n      <Layout className={styles['basic-layout-wrap']}>\n        <Sider \n          width={200} \n          style={{ background: '#fff' }}\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          onBreakpoint={this.onBreakpointChange}\n          onCollapse={(collapsed, type) => { console.log(collapsed, type); }}\n        >\n          <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['1']}\n            defaultOpenKeys={['sub1']}\n            style={{ height: '100%' }}\n          >\n            <Menu.Item key=\"1\">\n              <Link className={styles['sider-menu-link']} to=\"/\">SpaceBox</Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Icon type=\"trophy\" />\n              <Link className={styles['sider-menu-link']} to=\"/about\">最新文章</Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Icon type=\"schedule\" />\n              <Link className={styles['sider-menu-link']} to=\"/inbox\">文章存档</Link>\n            </Menu.Item>\n            <SubMenu key=\"sub3\" title={<span><Icon type=\"notification\" />Fullstack-React Part I</span>}>\n              <Menu.Item key=\"9\"><Link className={styles['sider-menu-link']} to=\"/charpater_1\" title=\"charpater_1\">charpater_1</Link></Menu.Item>\n              <Menu.Item key=\"10\"><Link className={styles['sider-menu-link']} to=\"/charpater_2\" title=\"React子组件调用父组件更新数据\">React子组件调用父组件更新数据</Link></Menu.Item>\n              <Menu.Item key=\"11\"><Link className={styles['sider-menu-link']} to=\"/option3\" title=\"Your first Reavt Web Application\">Your first Reavt Web Application</Link></Menu.Item>\n              <Menu.Item key=\"12\"><Link className={styles['sider-menu-link']} to=\"/option4\" title=\"Components\">Components</Link></Menu.Item>\n              <Menu.Item key=\"13\"><Link className={styles['sider-menu-link']} to=\"/option4\" title=\"Components & Servers\">Components & Servers</Link></Menu.Item>\n              <Menu.Item key=\"14\"><Link className={styles['sider-menu-link']} to=\"/option4\" title=\"JSX and the Virtual DOM\">JSX and the Virtual DOM</Link></Menu.Item>\n              <Menu.Item key=\"15\"><Link className={styles['sider-menu-link']} to=\"/option4\" title=\"Advanced Component Configuration with props, state, and children\">Advanced Component Configuration with props, state, and children</Link></Menu.Item>\n              <Menu.Item key=\"16\"><Link className={styles['sider-menu-link']} to=\"/option4\" title=\"Forms\">Forms</Link></Menu.Item>\n              <Menu.Item key=\"17\"><Link className={styles['sider-menu-link']} to=\"/option4\" title=\"Using Webpack with Creat React App\">Using Webpack with Creat React App</Link></Menu.Item>\n              <Menu.Item key=\"18\"><Link className={styles['sider-menu-link']} to=\"/option4\" title=\"Unit Testing\">Unit Testing</Link></Menu.Item>\n              <Menu.Item key=\"19\"><Link className={styles['sider-menu-link']} to=\"/option4\" title=\"Routing\">Routing</Link></Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"log\" title={<span><Icon type=\"notification\" />Learing Log</span>}>\n              <Menu.Item key=\"1\"><Link className={styles['sider-menu-link']} to=\"/log_1\">2019-04-02</Link></Menu.Item>\n              <Menu.Item key=\"2\"><Link className={styles['sider-menu-link']} to=\"/log_2\">2019-04-03</Link></Menu.Item>\n              <Menu.Item key=\"3\"><Link className={styles['sider-menu-link']} to=\"/log_3\">2019-04-08</Link></Menu.Item>\n              <Menu.Item key=\"4\"><Link className={styles['sider-menu-link']} to=\"/log_4\">2019-04-09</Link></Menu.Item>\n              <Menu.Item key=\"5\"><Link className={styles['sider-menu-link']} to=\"/log_5\">2019-04-10</Link></Menu.Item>\n              <Menu.Item key=\"6\"><Link className={styles['sider-menu-link']} to=\"/log_6\">2019-04-11</Link></Menu.Item>\n              <Menu.Item key=\"7\"><Link className={styles['sider-menu-link']} to=\"/log_7\">2019-04-16</Link></Menu.Item>\n              <Menu.Item key=\"8\"><Link className={styles['sider-menu-link']} to=\"/log_8\">2019-04-17</Link></Menu.Item>\n              <Menu.Item key=\"9\"><Link className={styles['sider-menu-link']} to=\"/log_9\">2019-04-18</Link></Menu.Item>\n              <Menu.Item key=\"10\"><Link className={styles['sider-menu-link']} to=\"/log_10\">2019-04-19</Link></Menu.Item>\n              <Menu.Item key=\"11\"><Link className={styles['sider-menu-link']} to=\"/log_11\">2019-04-22</Link></Menu.Item>\n            </SubMenu>\n          </Menu>\n        </Sider>\n        <Content style={{ padding: '0 24px', minHeight: 280 }}>\n          {!this.state.isBreakpoint && <Header title=\"最近更新\" />}\n          {this.state.isBreakpoint && <MiniHeader title=\"SpaceBox\"/>}\n          <Nav />\n          \n        </Content>\n      </Layout>\n    )\n  }\n}\n\nexport default BasicLayout;","import React, { Component } from 'react';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { LocaleProvider } from 'antd';\nimport zhCN from 'antd/lib/locale-provider/zh_CN';\nimport BasicLayout from './components/BasicLayout';\n\nclass RouterConfig extends Component {\n  render() {\n    return (\n      <LocaleProvider locale={zhCN}>\n        <Router>\n          <BasicLayout />\n        </Router>\n      </LocaleProvider>\n    )\n  }\n}\n\nexport default RouterConfig;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.module.less';\nimport Router from './router';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}